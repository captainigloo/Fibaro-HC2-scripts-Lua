{"name":"Indicateurs solaire","type":"virtual_device","properties":{"deviceIcon":227,"currentIcon":"229","log":"","logTemp":"","mainLoop":"maintenant = os.date(\"%H:%M\", os.time())\n---------------------------------\n-- Fonction d'initialisation de label\n---------------------------------\nfunction setDevicePropertyValue(id, label, value)\n  fibaro:call(id, \"setProperty\", \"ui.\"..label..\".value\", value)\nend\n---------------------------------\nlocal myDeviceID = fibaro:getSelfId() \nif maintenant > fibaro:getValue(1, \"sunriseHour\") and maintenant < fibaro:getValue(1, \"sunsetHour\") then\n-- ID icÃ´ne jour\n  fibaro:call(myDeviceID, \"setProperty\", \"currentIcon\", 227)\n\tif type(n) == \"nil\" then\n\t\tn1 = tonumber(os.time())\n\t\tfibaro:call(myDeviceID, \"pressButton\", \"12\")\n\t\tn = 1\n\tend\n\tif tonumber(os.time()) > n1 + (60) then -- maj toutes les minutes\n  \t\tfibaro:call(myDeviceID, \"pressButton\", \"12\")\n  \t\tn1 = tonumber(os.time())\n\tend\nelse\n-- ID icÃ´ne nuit\n\tfibaro:call(myDeviceID, \"setProperty\", \"currentIcon\", 229)\nend","ui.LabelAzimut.value":"284Â°","ui.LabelHauteur.value":"-3Â°","ui.LabelLux.value":"0 Lx","ui.LabelLuxPondere.value":"0 Lx","ui.LabelMaj.value":"2015-09-01 20:32:22","ui.LabelNebPourCent.value":"0%","ui.LabelNebulosite.value":"5/8","ui.LabelRTOTC.value":"0 W/mÂ²","ui.LabelRadiationDiffuse.value":"0 W/mÂ²","ui.LabelRadiationDirecte.value":"0 W/mÂ²","ui.LabelRadiationTotale.value":"0 W/mÂ²","visible":"true","rows":[{"type":"label","elements":[{"id":1,"lua":false,"waitForResponse":false,"caption":"Azimut","name":"LabelAzimut","favourite":false,"main":false}]},{"type":"label","elements":[{"id":2,"lua":false,"waitForResponse":false,"caption":"Hauteur","name":"LabelHauteur","favourite":false,"main":false}]},{"type":"label","elements":[{"id":3,"lua":false,"waitForResponse":false,"caption":"NÃ©bulositÃ© Octa","name":"LabelNebulosite","favourite":false,"main":false}]},{"type":"label","elements":[{"id":4,"lua":false,"waitForResponse":false,"caption":"NÃ©bulositÃ©","name":"LabelNebPourCent","favourite":false,"main":false}]},{"type":"label","elements":[{"id":5,"lua":false,"waitForResponse":false,"caption":"RadiatÂ° Directe","name":"LabelRadiationDirecte","favourite":false,"main":false}]},{"type":"label","elements":[{"id":6,"lua":false,"waitForResponse":false,"caption":"RadiatÂ° Diffuse","name":"LabelRadiationDiffuse","favourite":false,"main":false}]},{"type":"label","elements":[{"id":7,"lua":false,"waitForResponse":false,"caption":"RadiatÂ° Totale","name":"LabelRadiationTotale","favourite":false,"main":false}]},{"type":"label","elements":[{"id":8,"lua":false,"waitForResponse":false,"caption":"Eclairement ","name":"LabelLux","favourite":false,"main":false}]},{"type":"label","elements":[{"id":9,"lua":false,"waitForResponse":false,"caption":"Potentiel","name":"LabelRTOTC","favourite":false,"main":false}]},{"type":"label","elements":[{"id":10,"lua":false,"waitForResponse":false,"caption":"Lux pondÃ©rÃ©","name":"LabelLuxPondere","favourite":false,"main":false}]},{"type":"label","elements":[{"id":11,"lua":false,"waitForResponse":false,"caption":"MÃ J","name":"LabelMaj","favourite":false,"main":true}]},{"type":"button","elements":[{"id":12,"lua":true,"waitForResponse":false,"caption":"Mise Ã  jour","name":"Button31","empty":false,"msg":"---------------------------------\n-- Script de collecte de quelques indicateurs solaire\n-- Auteur : SÃ©bastien Joly\n-- Date : 29 aoÃ»t 2015\n-- ElÃ©ments de calculs :\n-- http://www.plevenon-meteo.info/technique/theorie/enso/ensoleillement.html\n-- http://herve.silve.pagesperso-orange.fr/solaire.htm\n---------------------------------\n-- Fonction dÃ©terminant si annÃ©e bissextile\nfunction AnneeBissextile(annee)\n  return annee%4==0 and (annee%100~=0 or annee%400==0)\nend\n---------------------------------\n-- Fonction de chargement de label\nfunction setDevicePropertyValue(id, label, value)\n  fibaro:call(id, \"setProperty\", \"ui.\"..label..\".value\", value)\nend\n---------------------------------\n-- Fonction spliter\nfunction split(s, delimiter)\n    result = {};\n    for match in (s..delimiter):gmatch(\"(.-)\"..delimiter) do\n        table.insert(result, match);\n    end\n    return result;\nend\n---------------------------------\n-- Fonction de calcul de la distance entre deux points gÃ©ographique en DÂ°.DD\nfunction geo_distance (lat1, lon1, lat2, lon2)\n  if lat1 == nil or lon1 == nil or lat2 == nil or lon2 == nil then\n    return nil\n  end\n  local dlat = math.rad(lat2-lat1)\n  local dlon = math.rad(lon2-lon1)\n  local sin_dlat = math.sin(dlat/2)\n  local sin_dlon = math.sin(dlon/2)\n  local a = sin_dlat * sin_dlat + math.cos(math.rad(lat1)) * math.cos(math.rad(lat2)) * sin_dlon * sin_dlon\n  local c = 2 * math.atan2(math.sqrt(a), math.sqrt(1-a))\n  -- 6378 km est le rayon terrestre au niveau de l'Ã©quateur\n  local d = 6378 * c\n  return d\nend\n---------------------------------\n-- Fonction Arrondir\nfunction arrondir(num, dec)\n  if num == 0 then\n    return 0\n  else\n  \tlocal mult = 10^(dec or 0)\n  \treturn math.floor(num * mult + 0.5) / mult\n  end\nend\n---------------------------------\n-- Procedure principale\n---------------------------------\n-- Initilise la variable local de l'ID du VD\nlocal VDid = fibaro:getSelfId()\n---------------------------------\n-- RequÃªte API loopback pour rÃ©cupÃ©rer Latitude & Longitude des paramÃ¨tres HC\nloopback = Net.FHttp(\"127.0.0.1\",11111)\nlocal response = loopback:GET(\"/api/settings/location\")\njsonTable = json.decode(response)\nlocal Ville = (jsonTable.city)\nlocal Latitude = (jsonTable.latitude)\nlocal Longitude = (jsonTable.longitude)\n---------------------------------\n-- Elevation Google API (Free)\nGoogleElevation = Net.FHttp(\"maps.googleapis.com\")\nlocal response = GoogleElevation:GET(\"/maps/api/elevation/json?locations=\".. Latitude .. \",\" .. Longitude .. \"&sensor=false\")\n--local jsonTable = json.decode(response[\"results\"][1])\n--local Altitude = jsonTable.elevation\njsonTable = json.decode(response)\nAltitude = jsonTable.results[1].elevation\n---------------------------------\n-- Meteo API OpenWeatherMap\nOpenWeatherMap = Net.FHttp(\"api.openweathermap.org\")\nlocal response = OpenWeatherMap:GET(\"/data/2.5/weather?lat=\".. Latitude .. \"&lon=\" .. Longitude .. \"&units=metric\")\nlocal jsonTable = json.decode(response)\nlocal Temperature = jsonTable.main.temp\nlocal PressionRelative = jsonTable.main.pressure\nlocal Humidite = jsonTable.main.humidity\nlocal Nebulosite = jsonTable.clouds.all\n---------------------------------\nDateHeure = os.date(\"%Y-%m-%d %H:%M:%S\", os.time())\n-- DÃ©but debug\nfibaro:debug(\"=====================================\")\nfibaro:debug(os.date(\"%Y-%m-%d %H:%M:%S\", os.time()))\nfibaro:debug(Ville .. \", \" .. Latitude .. \", \" .. Longitude)\nfibaro:debug(\"Altitude = \" .. tostring(Altitude) .. \" m\")\nlocal An = os.date(\"%Y\")\nlocal NiemeJourDeLAnnee = os.date(\"%j\")\nfibaro:debug(\"NiemeJourDeLAnnee = \" .. NiemeJourDeLAnnee)\nif  AnneeBissextile(An) == true then\n\tfibaro:debug( An .. \" est bissextile.\")\n\tJourDansLAnnee = 366\nelse\n\tfibaro:debug( An .. \" n'est pas bissextile.\")\n\tJourDansLAnnee = 365\nend\n---------------------------------\n-- Vitesse angulaire = Combien de degrÃ©s par jour\nVitesseAngulaire = 360/365.25 ----JourDansLAnnee -- ou approximativement 365.25\nfibaro:debug(\"Vitesse angulaire = \" .. VitesseAngulaire .. \" par jour\")\n---------------------------------\n-- Formule Declinaison = ArcSin(0,3978 x Sin(Va x (j - (81 - 2 x Sin(VaÃ¯Â¿Â½ x (j - 2))))))\nlocal Declinaison = math.deg(math.asin(0.3978 * math.sin(math.rad(VitesseAngulaire) *(NiemeJourDeLAnnee - (81 - 2 * math.sin((math.rad(VitesseAngulaire) * (NiemeJourDeLAnnee - 2))))))))\nfibaro:debug(\"La dÃ©clinaison = \" .. Declinaison .. \"Â°\")\n---------------------------------\n-- Temps universel dÃ©cimal (UTC)\nTempsDecimal = (os.date(\"!%H\") + os.date(\"!%M\") / 60)\nfibaro:debug(\"Temps universel decimal (UTC)\".. TempsDecimal ..\" H.dd\")\n---------------------------------\n-- Temps solaire\nHeureSolaire = TempsDecimal + (4 * Longitude / 60 )\nfibaro:debug(\"Temps solaire \".. HeureSolaire ..\" H.dd\")\n---------------------------------\n-- Angle horaire du soleil\nAngleHoraire = 15 * ( 12 - HeureSolaire )\nfibaro:debug(\"Angle Horaire = \".. AngleHoraire .. \"Â°\")\n---------------------------------\n-- La hauteur du soleil (ElÃ©vation ou altitude)\nHauteurSoleil = math.deg(math.asin(math.sin(math.rad(Latitude))* math.sin(math.rad(Declinaison)) + math.cos(math.rad(Latitude)) * math.cos(math.rad(Declinaison)) * math.cos(math.rad(AngleHoraire))))\nfibaro:debug(\"Hauteur du soleil = \" .. HauteurSoleil .. \"Â°\")\nlocal Azimut = math.acos((math.sin(math.rad(Declinaison)) - math.sin(math.rad(Latitude)) * math.sin(math.rad(HauteurSoleil))) / (math.cos(math.rad(Latitude)) * math.cos(math.rad(HauteurSoleil) ))) * 180 / math.pi\nlocal SinAzimut = (math.cos(math.rad(Declinaison)) * math.sin(math.rad(AngleHoraire))) / math.cos(math.rad(HauteurSoleil))\nif(SinAzimut<0) then\n  Azimut=360-Azimut\nend\nfibaro:debug(\"Azimut du soleil = \" .. Azimut .. \"Â°\")\n---------------------------------\n-- La durÃ©e d'insolation journaliÃ¨re - non stockÃ©e en VG\nDureeInsolation = math.deg(2/15 * math.acos(- math.tan(math.rad(Latitude)) * math.tan(math.rad(Declinaison))))\nDureeInsolation = arrondir(DureeInsolation,2)\nfibaro:debug(\"La durÃ©e d'insolation journaliÃ¨re = \" .. DureeInsolation ..\" H.dd\")\n---------------------------------\n-- Constantes Solaire\nConstanteRatiationSolaire = 1361 -- W/mÂ²\nConstanteRadiationLux = 200000 -- Lux\n---------------------------------\n-- Rayonnement solaire (en W/mÂ²) prÃ©sent Ã  l'entrÃ©e de l'atmosphÃ¨re.\nRadiationAtm = ConstanteRatiationSolaire * (1 +0.034 * math.cos( math.rad( 360 * NiemeJourDeLAnnee / JourDansLAnnee )))\nfibaro:debug(\"Radiation max en atmosphÃ¨re = \" .. arrondir(RadiationAtm,2) .. \" W/mÂ²\")\n---------------------------------\n-- Coefficient d'attenuation M\nPressionAbsolue = PressionRelative - arrondir((Altitude/ 8.3),1) -- hPa\nfibaro:debug(\"Pression relative locale = \" .. PressionRelative .. \" hPa\")\nfibaro:debug(\"Pression absolue atmosphÃ¨re = \" .. PressionAbsolue .. \" hPa\")\nSinusHauteurSoleil = math.sin(math.rad(HauteurSoleil))\nM0 = math.sqrt(1229 + math.pow(614 * SinusHauteurSoleil,2)) - 614 * SinusHauteurSoleil\nM = M0 * PressionRelative/PressionAbsolue\nfibaro:debug(\"Coefficient d'attenuation = \" .. M )\n---------------------------------\n-- RÃ©cupÃ©rer message SYNOP avec un Get HTTP sur le site Ogimet\nheureUTCmoins1 = os.date(\"!%H\")-1\nif string.len(heureUTCmoins1) == 1 then\n  heureUTCmoins1 = \"0\" .. heureUTCmoins1\nend\nUTC = os.date(\"%Y%m%d\").. heureUTCmoins1..\"00\" -- os.date(\"!%M\")\nfibaro:debug(\"Horodatage UTC = \" .. UTC)\n-- WMOID = \"07643\"\nlocal WMOID = fibaro:get(fibaro:getSelfId(), \"IPAddress\")\nfibaro:debug(\"Station SYNOP = \" .. WMOID)\nogimet = Net.FHttp(\"www.ogimet.com\")\nlocal synop = ogimet:GET(\"/cgi-bin/getsynop?block=\".. WMOID..\"&begin=\" .. UTC)\n--fibaro:debug(synop) ---temporaire\nrslt = split(synop,\",\")\nCodeStation = rslt[1]\nCoupure = \" \".. CodeStation .. \" \"\n--fibaro:debug(rslt[1])\nrslt = split(synop, \" \"..CodeStation.. \" \")\n-- fibaro:debug(rslt[2])\nTrame = string.gsub(rslt[2], \"=\", \"\")\nTrame = CodeStation ..\" \".. Trame\n--fibaro:debug(Trame)\nrslt = split(Trame, \" \")\n---------------------------------\n-- RÃ©cupÃ©rer le premier caractere du 3eme mot = NebulositÃ© en Octa\nOcta = string.sub(rslt[3], 1, 1)\nfibaro:debug( Octa .. \" Octa\")\n-- 0         Pas de couverture nuageuse\n-- 1-8       HuitiÃ¨me\n-- 9         Brouillard\n-- /        Couverture indiscernable\n-- cas particulier si valeur indÃ©terminÃ© un slash est renvoyÃ©. Afin d'Ãªtre le plus pÃ©nalisant 8 sera retenu.\nif Octa == \"/\" then\n  Octa = 8\nelseif Octa == \"9\" then\n  Octa = 8\nend\n---------------------------------\n-- Facteur d'attÃ©nuation des couches nuageuses Kc\n-- Kc=1-(0.75*((OCTA)**(3.4))\nKc=1-0.75*(math.pow(Octa/8,3.4))\nfibaro:debug(\"Kc = \" .. Kc)\n---------------------------------\n-- Au lever/coucher du soleil, on atteind les limites de prÃ©cisions de ces calculs.\n-- J'interrompts donc le calcul de radiation dÃ¨s 1Â°.\nif HauteurSoleil > 0 then\n-- Radiation directe\n\tRadiationDirecte = RadiationAtm * math.pow(0.6,M) * SinusHauteurSoleil\n\tfibaro:debug(\"RadiationDirecte = \".. arrondir(RadiationDirecte,2) ..\" W/mÂ²\")\n-- Radiation Diffuse\n\tRadiationDiffuse = RadiationAtm * (0.271 - 0.294 * math.pow(0.6,M)) * SinusHauteurSoleil\n\tfibaro:debug(\"Radiation Diffuse = \".. arrondir(RadiationDiffuse,2) ..\" W/mÂ²\")\n-- Radiation totale\n\tRadiationTotale = RadiationDiffuse + RadiationDirecte\n\tfibaro:debug(\"Radiation totale = \" .. arrondir(RadiationTotale,2) ..\" W/mÂ²\")\n-- Radiation en Lux : --  1 Lux = 0,0079 W/mÂ²\n\tLux = RadiationTotale / 0.0079\n\t--Lux = ConstanteRadiationLux / ConstanteRatiationSolaire * RadiationTotale\n\tfibaro:debug(\"Radiation totale en lux = \".. arrondir(Lux,2)..\" Lux\")\n-- Le rayonnement solaire avec ciel nuageux\n\tRTOTC = RadiationTotale * Kc\n\tfibaro:debug(\"Le rayonnement solaire avec pondÃ©ration = \" .. arrondir(RTOTC,2))\n-- Radiation en Lux pondÃ©rÃ©\n\t-- LuxPondere = ConstanteRadiationLux / ConstanteRatiationSolaire * RTOTC\n\tLuxPondere = RTOTC / 0.0079\n\tfibaro:debug(\"Radiation totale en lux pondÃ©rÃ© = \".. arrondir(LuxPondere,2)..\" Lux\")\t\nelse\n  RadiationDirecte = 0\n  RadiationDiffuse = 0\n  RadiationTotale = 0\n  Lux = 0\n  RTOTC = 0\n  LuxPondere = 0\nend\n---------------------------------\n-- Stocker les variables globales\n-- CrÃ©er les variables globales suivantes :\n-- VDSoleilAzimut\n-- VDSoleilHauteur\n-- VDSoleilRadiDir\n-- VDSoleilRadiDif\n-- VDSoleilRadiTot\n-- VDSoleilLuxTot\n-- VDSoleilOcta\n-- VDSoleilRadiPon\n-- VDSoleilLuxPon\nfibaro:setGlobal(\"VDSoleilAzimut\", arrondir(Azimut,2))\nfibaro:setGlobal(\"VDSoleilHauteur\", arrondir(HauteurSoleil,2))\nfibaro:setGlobal(\"VDSoleilRadiDir\", arrondir(RadiationDirecte,2))\nfibaro:setGlobal(\"VDSoleilRadiDif\", arrondir(RadiationDiffuse,2))\nfibaro:setGlobal(\"VDSoleilRadiTot\", arrondir(RadiationTotale,2))\nfibaro:setGlobal(\"VDSoleilLuxTot\", arrondir(Lux,2))\nfibaro:setGlobal(\"VDSoleilOcta\", Octa)\nfibaro:setGlobal(\"VDSoleilRadiPon\", arrondir(RTOTC,2))\nfibaro:setGlobal(\"VDSoleilLuxPon\", arrondir(LuxPondere,2))\n\n---------------------------------\n-- Mise Ã  jour des labels\nsetDevicePropertyValue(VDid, \"LabelAzimut\",  arrondir(Azimut,0)..\"Â°\" )\nsetDevicePropertyValue(VDid, \"LabelHauteur\", arrondir(HauteurSoleil,0) .. \"Â°\" )\nsetDevicePropertyValue(VDid, \"LabelNebulosite\", Octa .. \"/8\")\nsetDevicePropertyValue(VDid, \"LabelNebPourCent\", Nebulosite .. \"%\")\nsetDevicePropertyValue(VDid, \"LabelMaj\",DateHeure)\nsetDevicePropertyValue(VDid, \"LabelRadiationDirecte\", arrondir(RadiationDirecte,0) .. \" W/mÂ²\")\nsetDevicePropertyValue(VDid, \"LabelRadiationDiffuse\", arrondir(RadiationDiffuse,0) .. \" W/mÂ²\")\nsetDevicePropertyValue(VDid, \"LabelRadiationTotale\", arrondir(RadiationTotale,0) .. \" W/mÂ²\")\nsetDevicePropertyValue(VDid, \"LabelLux\",arrondir(Lux,0) .. \" Lx\")\nsetDevicePropertyValue(VDid, \"LabelRTOTC\", arrondir(RTOTC,0) .. \" W/mÂ²\")\nsetDevicePropertyValue(VDid, \"LabelLuxPondere\", arrondir(LuxPondere,0) .. \" Lx\")\n---------------------------------\n-- Tag widget\nfibaro:log(DateHeure)\n","buttonIcon":227,"favourite":false,"main":true}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}
